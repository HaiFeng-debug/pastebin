echo "#!/usr/bin/env bash

TARGET_PID=
SELECT_VALUE=/home/admin/app/provider.jar

#arthas package zip download url = https://arthas.aliyun.com/download/latest_version?mirror=aliyun
ARTHAS_PACKAGE_ZIP_DOWNLOAD_URL="https://arthas.aliyun.com/download/latest_version?mirror=aliyun"

# SYNOPSIS
#   rreadlink <fileOrDirPath>
# DESCRIPTION
#   Resolves <fileOrDirPath> to its ultimate target, if it is a symlink, and
#   prints its canonical path. If it is not a symlink, its own canonical path
#   is printed.
#   A broken symlink causes an error that reports the non-existent target.
# LIMITATIONS
#   - Won't work with filenames with embedded newlines or filenames containing
#     the string ' -> '.
# COMPATIBILITY
#   This is a fully POSIX-compliant implementation of what GNU readlink's
#    -e option does.
# EXAMPLE
#   In a shell script, use the following to get that script's true directory of origin:
#     trueScriptDir=$(dirname -- "$(rreadlink "$0")")
rreadlink() ( # Execute the function in a *subshell* to localize variables and the effect of `cd`.

  target=$1 fname= targetDir= CDPATH=

  # Try to make the execution environment as predictable as possible:
  # All commands below are invoked via `command`, so we must make sure that
  # `command` itself is not redefined as an alias or shell function.
  # (Note that command is too inconsistent across shells, so we don't use it.)
  # `command` is a *builtin* in bash, dash, ksh, zsh, and some platforms do not
  # even have an external utility version of it (e.g, Ubuntu).
  # `command` bypasses aliases and shell functions and also finds builtins
  # in bash, dash, and ksh. In zsh, option POSIX_BUILTINS must be turned on for
  # that to happen.
  { \unalias command; \unset -f command; } >/dev/null 2>&1
  [ -n "$ZSH_VERSION" ] && options[POSIX_BUILTINS]=on # make zsh find *builtins* with `command` too.

  while :; do # Resolve potential symlinks until the ultimate target is found.
      [ -L "$target" ] || [ -e "$target" ] || { command printf '%s\n' "ERROR: '$target' does not exist." >&2; return 1; }
      command cd "$(command dirname -- "$target")" # Change to target dir; necessary for correct resolution of target path.
      fname=$(command basename -- "$target") # Extract filename.
      [ "$fname" = '/' ] && fname='' # !! curiously, `basename /` returns '/'
      if [ -L "$fname" ]; then
        # Extract [next] target path, which may be defined
        # *relative* to the symlink's own directory.
        # Note: We parse `ls -l` output to find the symlink target
        #       which is the only POSIX-compliant, albeit somewhat fragile, way.
        target=$(command ls -l "$fname")
        target=${target#* -> }
        continue # Resolve [next] symlink target.
      fi
      break # Ultimate target reached.
  done
  targetDir=$(command pwd -P) # Get canonical dir. path
  # Output the ultimate target's canonical path.
  # Note that we manually resolve paths ending in /. and /.. to make sure we have a normalized path.
  if [ "$fname" = '.' ]; then
    command printf '%s\n' "${targetDir%/}"
  elif  [ "$fname" = '..' ]; then
    # Caveat: something like /var/.. will resolve to /private (assuming /var@ -> /private/var), i.e. the '..' is applied
    # AFTER canonicalization.
    command printf '%s\n' "$(command dirname -- "${targetDir}")"
  else
    command printf '%s\n' "${targetDir%/}/$fname"
  fi
)

# reset arthas work environment
# reset some options for env
reset_for_env() {
  # if env define the JAVA_HOME, use it first
  # if is alibaba opts, use alibaba ops's default JAVA_HOME
  [ -z "${JAVA_HOME}" ] && [ -d /opt/taobao/java ] && JAVA_HOME=/opt/taobao/java

  if [[ (-z "${JAVA_HOME}") && (-e "/usr/libexec/java_home") ]]; then
    # for mac
    JAVA_HOME=$(/usr/libexec/java_home)
  fi

  # iterater throught candidates to find a proper JAVA_HOME at least contains tools.jar which is required by arthas.
  if [ ! -d "${JAVA_HOME}" ]; then
    JAVA_HOME_CANDIDATES=($(ps aux | grep java | grep -v 'grep java' | awk '{print $11}' | sed -n 's/\/bin\/java$//p'))
    for JAVA_HOME_TEMP in ${JAVA_HOME_CANDIDATES[@]}; do
      if [ -f "${JAVA_HOME_TEMP}/lib/tools.jar" ]; then
        JAVA_HOME=$(rreadlink "${JAVA_HOME_TEMP}")
        break
      fi
    done
  fi

  if [ -z "${JAVA_HOME}" ]; then
    exit_on_err 1 "Can not find JAVA_HOME, please set \$JAVA_HOME bash env first."
  fi

  echo "[INFO] JAVA_HOME: ${JAVA_HOME}"

  # reset CHARSET for alibaba opts, we use GBK
  [[ -x /opt/taobao/java ]] && JVM_OPTS="-Dinput.encoding=GBK ${JVM_OPTS} "

}
select_pid() {
  local IFS=$'\n'
  CANDIDATES=($(${JAVA_HOME}/bin/jps -l | grep -v sun.tools.jps.Jps | awk '{print $0}'))

  index=0
  suggest=1
  # auto select tomcat/pandora-boot process
  for process in "${CANDIDATES[@]}"; do
    index=$(($index + 1))
    if [ $(echo ${process} | grep -c org.apache.catalina.startup.Bootstrap) -eq 1 ] ||
      [ $(echo ${process} | grep -c com.taobao.pandora.boot.loader.SarLauncher) -eq 1 ]; then
      suggest=${index}
      break
    fi
  done

  index=0
  for process in "${CANDIDATES[@]}"; do
    index=$(($index + 1))
    if [ ${index} -eq ${suggest} ]; then
      echo "* [$index]: ${process}"
    else
      echo "  [$index]: ${process}"
    fi
  done
  echo " "
  echo "$(echo $(tput setaf 1) 请手动选择进程或者idea 预先配置jps -l 工程名称自动执行$(tput sgr0))"
  echo " "

  read choice

  if [ -z ${choice} ]; then
    choice=${suggest}
  fi

  TARGET_PID=$(echo ${CANDIDATES[$(($choice - 1))]} | cut -d ' ' -f 1)
}

# Usage: banner_simple "my title"
banner_simple() {
  local msg="* $* *"
  local edge=$(echo "$msg" | sed 's/./*/g')
  echo "$edge"
  echo "$(tput bold)$msg$(tput sgr0)"
  echo "$edge"
  echo
}
# Usage exit shell with err_code
# $1 : err_code
# $2 : err_msg
exit_on_err() {
  [[ ! -z "${2}" ]] && banner_simple $(echo $(tput setaf 1)${2} $(tput sgr0)) 1>&2
  exit ${1}
}

# check arthas permission
check_permission() {
  [ ! -w "$HOME" ] &&
    exit_on_err 1 "permission denied, $HOME is not writable."
}

createFile() {
  if [ ! -f $1 ]; then
    mkdir -p "$(dirname "$1")" && touch $1 >/dev/null 2>&1 && echo "File $1 created." || return 1
  fi
}

installArthas() {
  if [ ! -d "$HOME/opt/arthas" ]; then
    banner_simple "arthas idea plugin make dir $HOME/opt/arthas"
    mkdir -p $HOME/opt/arthas || return 1
  fi
  # download arthas

  if [ ! -f "$HOME/opt/arthas/arthas-agent.jar" ]; then
    # 这里选择判断是否下载zip 包 没有使用 arthas-packaging-latest-version-bin.zip 这个名词 由于手动上传解压到当前目录名词可能不一致，选择一个中性的判断比较灵活
    local temp_target_lib_zip="$HOME/opt/arthas/arthas-packaging-latest-version-bin.zip"
    echo "arthas idea plugin download arthas zip package ${temp_target_lib_zip} download url=${ARTHAS_PACKAGE_ZIP_DOWNLOAD_URL}"
    echo " "
    echo "$(echo $(tput setaf 1)如果网络无法访问 https://arthas.aliyun.com/download/latest_version?mirror=aliyun $(tput sgr0))"
    echo "$(echo $(tput setaf 1)idea设置网络可以访问的arthas 完整zip包的下载地址 或者直接下载解压到服务器 $HOME/opt/arthas 目录 $(tput sgr0))"
    echo "$(echo $(tput setaf 1)如果配置的是oss 存储,arthas 命令 other分组下面 Local File Upload To Oss命令可以上传文件 有效期1年,配置到arthas zip包地址$(tput sgr0))"
    echo " "
    curl  -Lk "${ARTHAS_PACKAGE_ZIP_DOWNLOAD_URL}" -o  "${temp_target_lib_zip}" || retrun 1
    cd "$HOME/opt/arthas" && unzip -o "${temp_target_lib_zip}"
    chmod +x "$HOME/opt/arthas/as.sh" || return 1
  fi
}
# xxxClassBase64Str|xxxClassPath,xxxClass2Base64Str|xxxClass2Path
decodebase64CLassFile() {
  bash64FileAndPathList="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dW50aW1lVmlzaWJsZUFubm90YXRpb25zAQA4TG9yZy9zcHJpbmdmcmFtZXdvcmsvYmVhbnMvZmFjdG9yeS9hbm5vdGF0aW9uL0F1dG93aXJlZDsBABZqb3VybmFsVmlzaWJsZURvTWFwcGVyAQBOTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvbWFwcGVyL0pvdXJuYWxWaXNpYmxlRG9NYXBwZXI7AQAWdGVtcGxhdGVVc2VOdW1Eb01hcHBlcgEATkxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL21hcHBlci9UZW1wbGF0ZVVzZU51bURvTWFwcGVyOwEAGXRlbXBsYXRlUmVjZW50VXNlRG9NYXBwZXIBAFFMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9tYXBwZXIvVGVtcGxhdGVSZWNlbnRVc2VEb01hcHBlcjsBABpqb3VybmFsTm90aWZ5QXN5bmNFeGVjdXRvcgEAH0xqYXZhL3V0aWwvY29uY3VycmVudC9FeGVjdXRvcjsBABppbU1lc3NhZ2VTZW5kQXN5bmNFeGVjdXRvcgEADm1zZ1NlbmRTZXJ2aWNlAQBKTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvaW5mcmFzdHJ1Y3R1cmUvc2VydmljZS9Nc2dTZW5kU2VydmljZTsBAA91c2VySW5mb1NlcnZpY2UBAEtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9pbmZyYXN0cnVjdHVyZS9zZXJ2aWNlL1VzZXJJbmZvU2VydmljZTsBAA1kaWFtb25kQ29uZmlnAQA5TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvY29uZmlnL0RpYW1vbmRDb25maWc7AQASam91cm5hbERldGFpbENhY2hlAQA9TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvY2FjaGUvSm91cm5hbERldGFpbENhY2hlOwEAEnNlbmRKb3VybmFsU2F2ZU1zZwEAQUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL21xL3JvY2tldC9TZW5kSm91cm5hbFNhdmVNc2c7AQARam91cm5hbERyYWZ0Q2FjaGUBADxMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9jYWNoZS9Kb3VybmFsRHJhZnRDYWNoZTsBABdyZWNlbnRUZW1wbGF0ZUxpc3RDYWNoZQEAQkxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL2NhY2hlL1JlY2VudFRlbXBsYXRlTGlzdENhY2hlOwEAG0xqYXZheC9hbm5vdGF0aW9uL1Jlc291cmNlOwEAGnJlY29tbWVuZFRlbXBsYXRlTGlzdENhY2hlAQBFTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvY2FjaGUvUmVjb21tZW5kVGVtcGxhdGVMaXN0Q2FjaGU7AQAOam91cm5hbE1hbmFnZXIBADtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9tYW5hZ2VyL0pvdXJuYWxNYW5hZ2VyOwEAEmNvbW1lbnRRdWVyeUZhY2FkZQEAVkxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL21hbmFnZXIvY29tbWVudGFuZGxpa2UvY29tbWVudC9Db21tZW50UXVlcnlGYWNhZGU7AQAPbGlrZVF1ZXJ5RmFjYWRlAQBQTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvbWFuYWdlci9jb21tZW50YW5kbGlrZS9saWtlL0xpa2VRdWVyeUZhY2FkZTsBABFpbnRlcm5hdGlvbmFsVXRpbAEAPExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3V0aWxzL0ludGVybmF0aW9uYWxVdGlsOwEAGWFwcGxpY2F0aW9uRXZlbnRQdWJsaXNoZXIBADdMb3JnL3NwcmluZ2ZyYW1ld29yay9jb250ZXh0L0FwcGxpY2F0aW9uRXZlbnRQdWJsaXNoZXI7AQAdam91cm5hbENvbnRlbnRTZWN1cml0eVNlcnZpY2UBAEpMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9zZXJ2aWNlL0pvdXJuYWxDb250ZW50U2VjdXJpdHlTZXJ2aWNlOwEAFmludGVyYWN0aXZlQ2FyZFNlcnZpY2UBADpMY29tL2Rpbmd0YWxrL2ludGVyYWN0aXZlL2NhcmQvaHNmL0ludGVyYWN0aXZlQ2FyZFNlcnZpY2U7AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAERMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9zZXJ2aWNlL2ltcGwvSm91cm5hbFNlcnZpY2VJbXBsOwEAEmdldFJlY2VpdmVKb3VybmFscwEAwChMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9kb21haW4vVXNlckluZm87TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXF1ZXN0L1JlY2VpdmVKb3VybmFsUXVlcnk7KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvc2hhcmVkL21vZGVsL3Jlc3VsdC9QYWdlUmVzdWx0OwEACHVzZXJJbmZvAQA6TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vZG9tYWluL1VzZXJJbmZvOwEAFnJlY2VpdmVKb3VybmFsUXVlcnlEdG8BAE5MY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3JlcXVlc3QvUmVjZWl2ZUpvdXJuYWxRdWVyeTsBAAlyZWNlaXZlSWQBAAVzdGFydAEAEExqYXZhL3V0aWwvRGF0ZTsBAANlbmQBAAlzdGFydFRpbWUBAAdlbmRUaW1lAQAFdG90YWwBAAhwYWdlUGFpcgEAJUxvcmcvYXBhY2hlL2NvbW1vbnMvbGFuZzMvdHVwbGUvUGFpcjsBAA9yZWNlaXZlSm91cm5hbHMBABBMamF2YS91dGlsL0xpc3Q7AQARcmVjZWl2ZUpvdXJuYWxJZHMBAAZyZXN1bHQBABZMb2NhbFZhcmlhYmxlVHlwZVRhYmxlAQBNTG9yZy9hcGFjaGUvY29tbW9ucy9sYW5nMy90dXBsZS9QYWlyPExqYXZhL2xhbmcvSW50ZWdlcjtMamF2YS9sYW5nL0ludGVnZXI7PjsBAFpMamF2YS91dGlsL0xpc3Q8TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxWaXNpYmxlRG87PjsBACJMamF2YS91dGlsL0xpc3Q8TGphdmEvbGFuZy9Mb25nOz47AQBZTGphdmEvdXRpbC9MaXN0PExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbEluZm87PjsBAA1TdGFja01hcFRhYmxlBwXeBwSVBwXjBwXkBwOsBwPKAQAJU2lnbmF0dXJlAQEJKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbztMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3JlcXVlc3QvUmVjZWl2ZUpvdXJuYWxRdWVyeTspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9zaGFyZWQvbW9kZWwvcmVzdWx0L1BhZ2VSZXN1bHQ8TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsSW5mbzs+OwEADGZpbGxMaWtlSW5mbwEAIyhMamF2YS91dGlsL0xpc3Q7TGphdmEvdXRpbC9MaXN0OylWAQAMam91cm5hbEluZm9zAQAQY29tbWVudFF1ZXJ5VHlwZQEACmpvdXJuYWxJZHMBABNqb3VybmFsTGlrZVF1ZXJ5RHRvAQBUTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvbWFuYWdlci9jb21tZW50YW5kbGlrZS9saWtlL0pvdXJuYWxMaWtlUXVlcnlEdG87AQAHbGlrZU1hcAEAD0xqYXZhL3V0aWwvTWFwOwEAbkxqYXZhL3V0aWwvTWFwPExqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL3V0aWwvTGlzdDxMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2NvbW1lbnQvYXBpL2R0by9yZXNwb25zZS9MaWtlSW5mbzs+Oz47AQC2KExqYXZhL3V0aWwvTGlzdDxMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxJbmZvOz47TGphdmEvdXRpbC9MaXN0PExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsVmlzaWJsZURvOz47KVYBAB1maWxsQ29tbWVudEluZm9zSW5zZW5kaW5nTGlzdAEAF2pvdXJuYWxzQ29tbWVudFF1ZXJ5RHRvAQBaTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvbWFuYWdlci9jb21tZW50YW5kbGlrZS9jb21tZW50L0pvdXJuYWxDb21tZW50UXVlcnlEdG87AQAJcmVzdWx0TWFwAQBxTGphdmEvdXRpbC9NYXA8TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvdXRpbC9MaXN0PExjb20vYWxpYmFiYS9nb3YvY2xvdWQvY29tbWVudC9hcGkvZHRvL3Jlc3BvbnNlL0NvbW1lbnRJbmZvOz47PjsBAH4oTGphdmEvdXRpbC9MaXN0PExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbEluZm87PjtMamF2YS91dGlsL0xpc3Q8TGphdmEvbGFuZy9Mb25nOz47KVYBABlmaWxsTGlrZUluZm9JblNlbmRpbmdMaXN0AQAQZmlsbENvbW1lbnRJbmZvcwEAEGZpbGxKb3VybmFsSW5mb3MBAA1yZWFkUmVzdWx0TWFwAQA0TGphdmEvdXRpbC9NYXA8TGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvQm9vbGVhbjs+OwEAGmZpbGxKb3VybmFsSW5mb3NCeXBpcGVsaW5lAQAKam91cm5hbERvcwEAU0xqYXZhL3V0aWwvTGlzdDxMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvSm91cm5hbERvOz47AQANZmlsbFVucmVhZE51bQEAEyhMamF2YS91dGlsL0xpc3Q7KVYBABFhbGxKb3VybmFsVmlzaWJsZQEAE2pvdXJuYWxSZWFkU3RhdGVNYXABAEZMamF2YS91dGlsL01hcDxMamF2YS9sYW5nL0xvbmc7TGphdmEvdXRpbC9MaXN0PExqYXZhL2xhbmcvQm9vbGVhbjs+Oz47BwPZAQBcKExqYXZhL3V0aWwvTGlzdDxMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxJbmZvOz47KVYBAA9maWxsUGNVbnJlYWROdW0BAGJMamF2YS91dGlsL0xpc3Q8TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsVW5yZWFkTnVtSW5mbzs+OwEAZShMamF2YS91dGlsL0xpc3Q8TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsVW5yZWFkTnVtSW5mbzs+OylWAQAUZ2VuZXJhdGVKb3VybmFsVGl0bGUBAARsYW5nAQA1TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9lbnVtcy9MYW5nRW51bTsBAA9maWxsVGhlVXNlck5hbWUBAE0oTGphdmEvdXRpbC9MaXN0O0xjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbzspVgEAB3VzZXJJZHMBAAl1c2VySW5mb3MBAAd1c2VyTWFwAQBdTGphdmEvdXRpbC9MaXN0PExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbFVzZXJJbmZvOz47AQAzTGphdmEvdXRpbC9NYXA8TGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvU3RyaW5nOz47AQCWKExqYXZhL3V0aWwvTGlzdDxMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxJbmZvOz47TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vZG9tYWluL1VzZXJJbmZvOylWAQAPZ2V0U2VuZEpvdXJuYWxzAQDAKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbztMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3JlcXVlc3QvU2VuZGluZ0pvdXJuYWxRdWVyeTspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9zaGFyZWQvbW9kZWwvcmVzdWx0L1BhZ2VSZXN1bHQ7AQATc2VuZEpvdXJuYWxRdWVyeUR0bwEATkxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVxdWVzdC9TZW5kaW5nSm91cm5hbFF1ZXJ5OwEACHBhZ2VCZWFuAQBITGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXF1ZXN0L0Zyb250UGFnZUJlYW47AQAMc2VuZEpvdXJuYWxzBwXlBwRPAQEJKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbztMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3JlcXVlc3QvU2VuZGluZ0pvdXJuYWxRdWVyeTspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9zaGFyZWQvbW9kZWwvcmVzdWx0L1BhZ2VSZXN1bHQ8TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsSW5mbzs+OwEADmdldEpvdXJuYWxJbmZvAQCSKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbztMamF2YS9sYW5nL0xvbmc7TGphdmEvbGFuZy9Mb25nOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL3NoYXJlZC9tb2RlbC9yZXN1bHQvUG9qb1Jlc3VsdDsBAAthY2NvdW50TmFtZQEACHNlbmRlcklkAQAJam91cm5hbElkAQANdmlzaWJsZURvTGlzdAEACWpvdXJuYWxEbwEAQUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsRG87AQALam91cm5hbEluZm8BAEdMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxJbmZvOwEAE2pvdXJuYWxVc2VySW5mb0xpc3QHBeYHBLkHBREBANsoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vZG9tYWluL1VzZXJJbmZvO0xqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvc2hhcmVkL21vZGVsL3Jlc3VsdC9Qb2pvUmVzdWx0PExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbEluZm87PjsBABJ1cGRhdGVKb3VybmFsU3RhdGUBAFooTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsSW5mbztMamF2YS91dGlsL0xpc3Q7KVYBABRqb3VybmFsVmlzaWJsZURvTGlzdAEApChMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxJbmZvO0xqYXZhL3V0aWwvTGlzdDxMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvSm91cm5hbFZpc2libGVEbzs+OylWAQASZmlsbFRoZVJlY2VpdmVySWRzAQBKKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbEluZm87KVYBAAtyZWNpZXZlcklkcwEAEXJlY2VpdmVyVXNlckluZm9zAQAQcmVjZWl2ZXJJZFN0cmluZwEAEmZpbGxUaGVDb21tZW50SW5mbwEAaihMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxJbmZvO0xqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7KVYBAAhxdWVyeUR0bwEADGNvbW1lbnRJbmZvcwEATkxqYXZhL3V0aWwvTGlzdDxMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2NvbW1lbnQvYXBpL2R0by9yZXNwb25zZS9Db21tZW50SW5mbzs+OwEAD2ZpbGxUaGVMaWtlSW5mbwEAB2lzTGlrZWQBAAFaAQANbGlrZVF1ZXJ5VHlwZQEACWxpa2VJbmZvcwEAS0xqYXZhL3V0aWwvTGlzdDxMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2NvbW1lbnQvYXBpL2R0by9yZXNwb25zZS9MaWtlSW5mbzs+OwcD+wEAEWZpbGxUaGVTdGF0aWNEYXRhAQBaKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbEluZm87TGphdmEvbGFuZy9Mb25nOylWAQARam91cm5hbFZpc2libGVEb3MBAAxhbGxSZWFkU3RhdGUBAAl1blJlYWROdW0BAAFKAQAlTGphdmEvdXRpbC9MaXN0PExqYXZhL2xhbmcvSW50ZWdlcjs+OwEAD3NhdmVKb3VybmFsSW5mbwEAwihMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9kb21haW4vVXNlckluZm87TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXF1ZXN0L0pvdXJuYWxPcGVyYXRlQ29tbWFuZDspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9zaGFyZWQvbW9kZWwvcmVzdWx0L1Bvam9SZXN1bHQ7AQARam91cm5hbE9wZXJhdGVEdG8BAFBMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3JlcXVlc3QvSm91cm5hbE9wZXJhdGVDb21tYW5kOwEBCyhMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9kb21haW4vVXNlckluZm87TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXF1ZXN0L0pvdXJuYWxPcGVyYXRlQ29tbWFuZDspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9zaGFyZWQvbW9kZWwvcmVzdWx0L1Bvam9SZXN1bHQ8TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsSW5mbzs+OwEAEXVwc2VydEpvdXJuYWxJbmZvAQCcKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbztMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3JlcXVlc3QvSm91cm5hbE9wZXJhdGVDb21tYW5kOylMamF2YS9sYW5nL0xvbmc7AQAMam91cm5hbFN0YXRlAQAQTGphdmEvbGFuZy9CeXRlOwEADGRyYWZ0Sm91cm5hbAEABmlzU2F2ZQEAB2pvdXJuYWwBAAtjb21taXRDb3VudAEACHJkc0NvdW50AQALZ2V0UmRzQ291bnQBAAMoKUoBAA5yZHNDb3VudENvbmZpZwEAAWUBABVMamF2YS9sYW5nL0V4Y2VwdGlvbjsHBNoBAA1zdWJtaXRKb3VybmFsAQANdXBkYXRlU3VjY2VzcwEAAUkBAApNcVVzZXJJbmZvAQASYWZ0ZXJJbnNlcnRKb3VybmFsAQCCKExqYXZhL2xhbmcvTG9uZztMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9kb21haW4vVXNlckluZm87TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9lbnVtcy9MYW5nRW51bTspVgEADG1lc3NhZ2VFdmVudAEAOUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL2V2ZW50L0ltTWVzc2FnZUV2ZW50OwEACGxhbmdFbnVtAQAOcmVjZWl2ZVVzZXJJZHMBABFqb3VybmFsRGV0YWlsSW5mbwEATUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbERldGFpbEluZm87AQAHYXRVc2VycwcE7wEAOkxvcmcvc3ByaW5nZnJhbWV3b3JrL3RyYW5zYWN0aW9uL2Fubm90YXRpb24vVHJhbnNhY3Rpb25hbDsBAAtyb2xsYmFja0ZvcgEAC3Byb3BhZ2F0aW9uAQA4TG9yZy9zcHJpbmdmcmFtZXdvcmsvdHJhbnNhY3Rpb24vYW5ub3RhdGlvbi9Qcm9wYWdhdGlvbjsBAAhSRVFVSVJFRAEAEWdlbmVyYXRlTXNnUGFyYW1zAQEDKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbztMamF2YS91dGlsL0xpc3Q7TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxEbztMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2VudW1zL0xhbmdFbnVtOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9ub3RpY2UvTm90aWNlTXNnUGFyYW1zOwEADWxvY2FsZU1lc3NhZ2UBAAhtc2dUaXRsZQEAA21zZwEARUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL25vdGljZS9Xb3JrTm90aWZpY2F0aW9uTXNnOwEACmFjdGlvbkNhcmQBADxMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9ub3RpY2UvQWN0aW9uQ2FyZDsBAAtzaW5nbGVUaXRsZQEABXRpdGxlAQAIdGl0bGVNc2cBAAlzaW5nbGVVcmwBAApyZWNlaXZlSWRzAQAPbm90aWNlTXNnUGFyYW1zAQBBTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vbm90aWNlL05vdGljZU1zZ1BhcmFtczsBAA1qb3VybmFsRGV0YWlsBwXnBwUKAQEVKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbztMamF2YS91dGlsL0xpc3Q8TGphdmEvbGFuZy9Mb25nOz47TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxEbztMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2VudW1zL0xhbmdFbnVtOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9ub3RpY2UvTm90aWNlTXNnUGFyYW1zOwEAGHNhdmVUaGVSZWNlbnRUZW1wbGF0ZVVzZQEAVihMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvSm91cm5hbERvO0xqYXZhL2xhbmcvU3RyaW5nOylWAQALcmVjZW50VXNlRG8BAEtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvVGVtcGxhdGVSZWNlbnRVc2VEbzsBABV1cGRhdGVUZW1wbGF0ZVVzZXJOdW0BAE0oTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vZG9tYWluL1VzZXJJbmZvO0xqYXZhL2xhbmcvTG9uZzspVgEACnRlbXBsYXRlSWQBAA50ZW1wbGF0ZVVzZU51bQEASExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9UZW1wbGF0ZVVzZU51bURvOwEAC3RlbXBsYXRlTnVtAQAHc3VjY2VzcwcF6AEAFHNhdmVKb3VybmFsVmlzaWJsZURvAQBkKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsRG87TGphdmEvdXRpbC9MaXN0O0xqYXZhL3V0aWwvTGlzdDspVgEADXJlY2VpdmVVc2VySWQBAAp2aXNpYmxlRG9zAQAQam91cm5hbFZpc2libGVEbwEASExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsVmlzaWJsZURvOwEAiChMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvSm91cm5hbERvO0xqYXZhL3V0aWwvTGlzdDxMamF2YS9sYW5nL0xvbmc7PjtMamF2YS91dGlsL0xpc3Q8TGphdmEvbGFuZy9Mb25nOz47KVYBABRzYXZlSm91cm5hbFJlYWRTdGF0ZQEAWChMamF2YS9sYW5nL0xvbmc7TGphdmEvbGFuZy9Mb25nOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL3NoYXJlZC9tb2RlbC9yZXN1bHQvUG9qb1Jlc3VsdDsBAApyZWNlaXZlcklkAQA2TGphdmEvdXRpbC9NYXA8TGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9Cb29sZWFuOz47AQCQKExqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvc2hhcmVkL21vZGVsL3Jlc3VsdC9Qb2pvUmVzdWx0PExqYXZhL3V0aWwvTWFwPExqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvQm9vbGVhbjs+Oz47AQAYc2F2ZUpvdXJuYWxSZWFkU3RhdGVPblBjAQBeKExqYXZhL2xhbmcvTG9uZztMamF2YS91dGlsL0xpc3Q7KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvc2hhcmVkL21vZGVsL3Jlc3VsdC9Db2xsZWN0aW9uUmVzdWx0OwEAB3Jlc3VsdHMBAMIoTGphdmEvbGFuZy9Mb25nO0xqYXZhL3V0aWwvTGlzdDxMamF2YS9sYW5nL0xvbmc7PjspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9zaGFyZWQvbW9kZWwvcmVzdWx0L0NvbGxlY3Rpb25SZXN1bHQ8TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsVW5yZWFkTnVtSW5mbzs+OwEAEGpvdXJuYWxJbmZvQ2hlY2sBAI0oTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vZG9tYWluL1VzZXJJbmZvO0xjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVxdWVzdC9Kb3VybmFsT3BlcmF0ZUNvbW1hbmQ7KVYBAA5qb3VybmFsQ29udGVudAEAC29sZGVyUmVjb3JkAQAkTGphdmEvdXRpbC9MaXN0PExqYXZhL2xhbmcvU3RyaW5nOz47AQASZmluZEpvdXJuYWxDb250ZW50AQBiKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVxdWVzdC9Kb3VybmFsT3BlcmF0ZUNvbW1hbmQ7KUxqYXZhL3V0aWwvTGlzdDsBAA5wYXJhZ3JhcGhJbmZvcwEAW0xqYXZhL3V0aWwvTGlzdDxMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL1BhcmFncmFwaEluZm87PjsBAHYoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXF1ZXN0L0pvdXJuYWxPcGVyYXRlQ29tbWFuZDspTGphdmEvdXRpbC9MaXN0PExqYXZhL2xhbmcvU3RyaW5nOz47AQATZ2V0Sm91cm5hbFN0YXRpc3RpYwEA3ShMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9kb21haW4vVXNlckluZm87TGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvSW50ZWdlcjtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3JlcXVlc3QvRnJvbnRQYWdlQmVhbjspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9zaGFyZWQvbW9kZWwvcmVzdWx0L1BhZ2VSZXN1bHQ7AQAKc3RhdGljVHlwZQEACGNvdW50TnVtAQAJcmVjZWl2ZXJzAQAIaXNTZW5kb3IBAAppc1JlY2VpdmVyAQALcmVjZWl2ZXJJZHMHBekBASooTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vZG9tYWluL1VzZXJJbmZvO0xqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0ludGVnZXI7TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXF1ZXN0L0Zyb250UGFnZUJlYW47KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvc2hhcmVkL21vZGVsL3Jlc3VsdC9QYWdlUmVzdWx0PExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbFVzZXJJbmZvOz47AQANcmV2b2tlSm91cm5hbAEAgihMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9kb21haW4vVXNlckluZm87TGphdmEvbGFuZy9Mb25nOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL3NoYXJlZC9tb2RlbC9yZXN1bHQvUG9qb1Jlc3VsdDsBAAZzZW5kQXQBAApyZXZva2VUaW1lAQANbG9jYWxEYXRlVGltZQEAGUxqYXZhL3RpbWUvTG9jYWxEYXRlVGltZTsBAAdleGFtcGxlAQAiTHRrL215YmF0aXMvbWFwcGVyL2VudGl0eS9FeGFtcGxlOwcF6gEADWdldFJldm9rZVRpbWUBAB1sYW1iZGEkZ2V0Sm91cm5hbFN0YXRpc3RpYyQ0NgEAhShMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9kb21haW4vVXNlckluZm87TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxWaXNpYmxlRG87KVoBAAJqcgEAGmxhbWJkYSRqb3VybmFsSW5mb0NoZWNrJDQ1AQBPKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbztMamF2YS9sYW5nL1N0cmluZzspVgEAB2NvbnRlbnQBACJsYW1iZGEkc2F2ZUpvdXJuYWxSZWFkU3RhdGVPblBjJDQ0AQAjKExqYXZhL3V0aWwvTGlzdDtMamF2YS9sYW5nL0xvbmc7KVYBAAJpZAEAFGpvdXJuYWxVbnJlYWROdW1JbmZvAQBQTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsVW5yZWFkTnVtSW5mbzsBAB5sYW1iZGEkc2F2ZUpvdXJuYWxWaXNpYmxlRG8kNDMBAGsoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxWaXNpYmxlRG87TGphdmEvdXRpbC9MaXN0O0xqYXZhL2xhbmcvTG9uZzspVgEACGF0VXNlcklkAQAJdmlzaWJsZURvAQAebGFtYmRhJHNhdmVKb3VybmFsVmlzaWJsZURvJDQyAQAcbGFtYmRhJGFmdGVySW5zZXJ0Sm91cm5hbCQ0MQEAPChMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9ldmVudC9JbU1lc3NhZ2VFdmVudDspVgEAHGxhbWJkYSRhZnRlckluc2VydEpvdXJuYWwkNDABAMMoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vZG9tYWluL1VzZXJJbmZvO0xqYXZhL3V0aWwvTGlzdDtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvSm91cm5hbERvO0xjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZW51bXMvTGFuZ0VudW07KVYBABxsYW1iZGEkYWZ0ZXJJbnNlcnRKb3VybmFsJDM5AQBkKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvUGFyYWdyYXBoSW5mbzspTGphdmEvdXRpbC9zdHJlYW0vU3RyZWFtOwEABGluZm8BAElMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL1BhcmFncmFwaEluZm87BwXrAQAcbGFtYmRhJGFmdGVySW5zZXJ0Sm91cm5hbCQzOAEAJChMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9Mb25nOwEAAXMBABtsYW1iZGEkZmlsbFRoZVN0YXRpY0RhdGEkMzcBABYoTGphdmEvbGFuZy9JbnRlZ2VyOylaAQAJcmVhZFN0YXRlAQAbbGFtYmRhJGZpbGxUaGVTdGF0aWNEYXRhJDM2AQBdKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsVmlzaWJsZURvOylMamF2YS9sYW5nL0ludGVnZXI7AQAEZGF0YQEAGWxhbWJkYSRmaWxsVGhlTGlrZUluZm8kMzUBADwoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9jb21tZW50L2FwaS9kdG8vcmVzcG9uc2UvTGlrZUluZm87KVoBAAFsAQA5TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9jb21tZW50L2FwaS9kdG8vcmVzcG9uc2UvTGlrZUluZm87AQAMbGlrZVVzZXJJbmZvAQAyTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbzsHBewBABlsYW1iZGEkZmlsbFRoZUxpa2VJbmZvJDM0AQAVKExqYXZhL2xhbmcvU3RyaW5nOylaAQADY3F0AQAcbGFtYmRhJGZpbGxUaGVDb21tZW50SW5mbyQzMwEAGWxhbWJkYSRnZXRTZW5kSm91cm5hbHMkMzIBAIQoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vZG9tYWluL1VzZXJJbmZvO0xjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbEluZm87KVYBAAFqAQAZbGFtYmRhJGdldFNlbmRKb3VybmFscyQzMQEAEGpvdXJuYWxVc2VySW5mb3MBAA5sYW1iZGEkbnVsbCQzMAEAGyhMamF2YS9sYW5nL0NoYXJTZXF1ZW5jZTspWgEABXh2YSQwAQAYTGphdmEvbGFuZy9DaGFyU2VxdWVuY2U7AQAZbGFtYmRhJGZpbGxUaGVVc2VyTmFtZSQyOQEAkyhMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9kb21haW4vVXNlckluZm87TGphdmEvdXRpbC9NYXA7TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsSW5mbzspVgEAAXIBAARuYW1lBwQbAQAZbGFtYmRhJGZpbGxUaGVVc2VyTmFtZSQyOAEAOChMamF2YS9sYW5nL1N0cmluZztMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmc7AQAEa2V5MQEABGtleTIBABlsYW1iZGEkZmlsbFRoZVVzZXJOYW1lJDI3AQBOKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbFVzZXJJbmZvOylWAQACanUBAEtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxVc2VySW5mbzsBAB5sYW1iZGEkZ2VuZXJhdGVKb3VybmFsVGl0bGUkMjYBAH8oTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9lbnVtcy9MYW5nRW51bTtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxJbmZvOylWAQANdGVtcGxhdGVUaXRsZQEAGWxhbWJkYSRmaWxsUGNVbnJlYWROdW0kMjUBAGIoTGphdmEvdXRpbC9NYXA7TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsVW5yZWFkTnVtSW5mbzspVgEACnJlYWRTdGF0ZXMBACVMamF2YS91dGlsL0xpc3Q8TGphdmEvbGFuZy9Cb29sZWFuOz47AQAObGFtYmRhJG51bGwkMjQBABYoTGphdmEvbGFuZy9Cb29sZWFuOylaAQATTGphdmEvbGFuZy9Cb29sZWFuOwEAGWxhbWJkYSRmaWxsUGNVbnJlYWROdW0kMjMBAFooTGphdmEvdXRpbC9NYXA7TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxWaXNpYmxlRG87KVYBABdsYW1iZGEkZmlsbFVucmVhZE51bSQyMgEAWShMamF2YS91dGlsL01hcDtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxJbmZvOylWAQAObGFtYmRhJG51bGwkMjEBABdsYW1iZGEkZmlsbFVucmVhZE51bSQyMAEAJGxhbWJkYSRmaWxsSm91cm5hbEluZm9zQnlwaXBlbGluZSQxOQEAYyhMamF2YS91dGlsL01hcDtMamF2YS91dGlsL0xpc3Q7TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxEbzspVgEAAmppAQAGaXNSZWFkBwXUAQAObGFtYmRhJG51bGwkMTgBAFYoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxEbzspTGphdmEvbGFuZy9Cb29sZWFuOwEADmxhbWJkYSRudWxsJDE3AQBlKExqYXZhL3V0aWwvTWFwO0xjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsRG87KUxqYXZhL2xhbmcvQm9vbGVhbjsBAANqRG8BAA5sYW1iZGEkbnVsbCQxNgEAiihMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvSm91cm5hbERvOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxJbmZvOwEAJGxhbWJkYSRmaWxsSm91cm5hbEluZm9zQnlwaXBlbGluZSQxNQEAOyhMamF2YS9sYW5nL0Jvb2xlYW47TGphdmEvbGFuZy9Cb29sZWFuOylMamF2YS9sYW5nL0Jvb2xlYW47AQACazEBAAJrMgEAGmxhbWJkYSRmaWxsSm91cm5hbEluZm9zJDE0AQBqKExqYXZhL3V0aWwvTWFwO0xqYXZhL3V0aWwvTGlzdDtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvSm91cm5hbFZpc2libGVEbzspVgEADmxhbWJkYSRudWxsJDEzAQBdKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsVmlzaWJsZURvOylMamF2YS9sYW5nL0Jvb2xlYW47AQAObGFtYmRhJG51bGwkMTIBAA5sYW1iZGEkbnVsbCQxMQEAkShMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvSm91cm5hbFZpc2libGVEbzspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsSW5mbzsBABpsYW1iZGEkZmlsbEpvdXJuYWxJbmZvcyQxMAEAGWxhbWJkYSRmaWxsQ29tbWVudEluZm9zJDkBAA9jb21tZW50SW5mb0xpc3QBABlsYW1iZGEkZmlsbENvbW1lbnRJbmZvcyQ4AQAibGFtYmRhJGZpbGxMaWtlSW5mb0luU2VuZGluZ0xpc3QkNwEADWxhbWJkYSRudWxsJDYBACJsYW1iZGEkZmlsbExpa2VJbmZvSW5TZW5kaW5nTGlzdCQ1AQAmbGFtYmRhJGZpbGxDb21tZW50SW5mb3NJbnNlbmRpbmdMaXN0JDQBACZsYW1iZGEkZmlsbENvbW1lbnRJbmZvc0luc2VuZGluZ0xpc3QkMwEAFWxhbWJkYSRmaWxsTGlrZUluZm8kMgEADWxhbWJkYSRudWxsJDEBABVsYW1iZGEkZmlsbExpa2VJbmZvJDABAAg8Y2xpbml0PgEAClNvdXJjZUZpbGUBABdKb3VybmFsU2VydmljZUltcGwuamF2YQEAKExvcmcvc3ByaW5nZnJhbWV3b3JrL3N0ZXJlb3R5cGUvU2VydmljZTsMAi4CLwwF7QXuBwXjDAXvBe4MBfAF7gEADmphdmEvdXRpbC9EYXRlBwXkDAXxAsgMAi4F8gwB/AH9AQAfc3RhcnQgdGltZSBiaWdnZXIgdGhhbiBlbmQgdGltZQcF8wwF9AX1AQA+Y29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9leGNlcHRpb24vQnVzaW5lc3NFeGNlcHRpb24HBfYMBfcF+AwCLgX5DAIGAgcMBfoF7gwF+wXuDAX8Be4MBf0F/gcF/wwGAAYBDAYCBgMMBgQGBQEAOGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi90b29sL1BhZ2VSZXN1bHRVdGlsBwYGDAYHBggMAv0GCQwGCgYDDAYLBgMMBgwGDQcF6QwGDgYPAQARamF2YS9sYW5nL0ludGVnZXIMBhAGDwwCNQYRDAYSBhMBABBCb290c3RyYXBNZXRob2RzDwYGFBAGFQ8FAd8QBhYMBhcGGAcF6wwGGQYaBwYbDAYcBh0MBh4GHwEADmphdmEvdXRpbC9MaXN0AQAudXNlciB7fSByZWNlaXZlIHt9IGpvdXJuYWxzIGFuZCBqb3VybmFsIGlkcyB7fQEAEGphdmEvbGFuZy9PYmplY3QHBiAMBiEGIgwDQwYjAQATamF2YS91dGlsL0FycmF5TGlzdAwCbAJXDAJvAnAMAnwCfQwCeQJwDAJoAlcMAlYCVwcGJAwGJQYmAQAvbm9uZSBhbnkgam91cm5hbCBpZCB3aGlsZSBiYXRjaCBxdWVyeSBsaWtlIGluZm8MAhMCFAEAPmNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9jb25zdGFudC9EaWFtb25kQ29uc3RhbnRzAQAXam91cm5hbF9saWtlX3F1ZXJ5X3R5cGUHBicMBigGKQcGKgwGKwYsEAYtDwYGLhADVwwGLwYwDAYxBjIPBgYzEAY0DAYZBjUHBjYMBjcB9QwGOAYVAQBSY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9tYW5hZ2VyL2NvbW1lbnRhbmRsaWtlL2xp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IHRoZSBkcmFmdCBhZnRlciBzdWJtaXR0aW5nIHRoZSBqb3VybmFsIHdpdGggaWQge30MAhkCGgcG9AwG9Qb2DAb3BvgMBvkG+gwG+wb8DAb9Bv4MAscCyAEAF2pvdXJuYWwuZHJhZnQucmRzLmNvdW50AQAEbnVsbAwG/wcADAH5AfoBABNqYXZhL2xhbmcvRXhjZXB0aW9uAQBVZXJyb3IgcGFyc2UgZGlhbW9uZCBjb25maWcgb2YgZHJhZnQgc2F2ZSB0byByZHMgc3RlcCBzaXplLCB1c2luZyB0aGUgZGVmYXVsdCB2YWx1ZSB7fQwHAQX4AQAydGVuYW50SWQ6e30gdXNlckluZm86e30gc3VjY2VzcyBzdWJtaXQgam91cm5hbDp7fSAMBwIF7gwHAwb4DAcEBvgMBwUGngwHBgX1DAcHBvgMAhcCGAcHCAwHCQcKAQAuam91cm5hbCBpcyBub3QgZXhpc3Qsam91cm5hbElkOnt9LCBzZW5kZXJJZDp7fQwHCwaRDAcMBp4HBw0MBiUDYAEALnJlY2VpdmVySWRzIGlzIGVtcHR5LGpvdXJuYWxJZDp7fSwgc2VuZGVySWQ6e30PBgcODAcPBp4BAEtjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbERldGFpbEluZm8HBxAMBxEHEgwHEwYIBwcUDAYlBi0PBgcVEAcWDwYHFxADQgwHGAYaDAL/AwAMAvMC9AwC9wL4DAIMAg0QAi8PBwcZDAcaBxsHBxwMBwkHHQEAN2NvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvZXZlbnQvSW1NZXNzYWdlRXZlbnQHBx4MBx8HIAwCLgchDAIOAg0PBwciDAcaByMBAD9jb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL25vdGljZS9Ob3RpY2VNc2dQYXJhbXMMBscHJAwGfwYiDAclByYPBQcnEAcoDAcpByoBABBqYXZhL2xhbmcvU3RyaW5nDAcrByYHBywMBy0HLgwHLwcwDAcxByYMAiYCJwEAR2NvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9jb25zdGFudC9DdXN0b21NZXNzYWdlS2V5Q29uc3RhbnRzAQAUbm90aWZ5X21lc3NhZ2VfdGl0bGUHBzIMBzMHNAwHNQaeDAc2ByYBAENjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL25vdGljZS9Xb3JrTm90aWZpY2F0aW9uTXNnAQALYWN0aW9uX2NhcmQMBzcHOAEAOmNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vbm90aWNlL0FjdGlvbkNhcmQBAB5ub3RpZnlfYWN0aW9uX2NhcmRfc2lnbGVfdGl0bGUMBzkHOgEAGW5vdGlmeV9hY3Rpb25fY2FyZF9fdGl0bGUMBzsHOgEAF2phdmEvbGFuZy9TdHJpbmdCdWlsZGVyAQAUZ292LWpvdXJuYWwucHJvdG9jb2wMBzwHPQEAAzovLwEAEmdvdi1qb3VybmFsLmRvbWFpbgEAIy9hcGkvbm9sb2dpbi9tb2JpbGUvaW5kZXgjL2xvZ0luZm8vDAc8Bz4BAAEvDAc/Be4MB0AGngwHQQc6AQAw54K55Ye74oCc5p+l55yL6K+m5oOF4oCd5p+l55yL5pel5b+X5a6M5pW05YaF5a65DAdCBzoMB0MHRAwHRQcmAQAhZXJyb3IgcGFyc2luZyBqb3VybmFsIGRldGFpbCA6ICVzDAcLB0YBAExlbXB0eSByZWNlaXZlIHVzZXIgd2hlbiBzYXZlIHRoZSByZWNlbnRUZW1wbGF0ZSB1c2UgZGF0YSB3aXRoIGpvdXJuYWwgaWQ6IHt9AQBJY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvVGVtcGxhdGVSZWNlbnRVc2VEbwwG5wb4DAdHBvoMB0gG/AwHSQb4DAdKBfUMB0sF7gwHMQb4DAIKAgsHB0wMB00HTgwCGwIcBwdPDAdQB1EMAggCCQcHUgwHUwdUAQAwZmluZCB0ZW1wbGF0ZSB1c2VkIHRpbWVzIGlzIG51bGwsIHRlbXBsYXRlSWQ6IHt9BwXoDAdVBf4MB1YHVwEAOnRlbXBsYXRlSWQ6e30gdXNlIG51bSB1cGRhdGUgZmFpbCB3aXRoIG9yaWdpbmFsIHVzZSBudW06e30MAh4CHwcHWAwHWQdaAQAoZW1wdHkgcmVjZWl2ZSB1c2VyIGlkIHdpdGggam91cm5hbCBpZCB7fQwHWwb6DAdcBvwMB10HXgwGgQdfDAbHBvgMB2AG+AwHYQb4DwYHYhAG+AwGQAdjDwYHZAwHZQdmDAdnB2gMB2kHagwHawZQAQArZW1wdHkgam91cm5hbElkcyB0byBiZSB1cGRhdGUgdG8gcmVhZCBzdGF0ZQwHbAdtAQAvdXBkYXRlZCBzaXplOlt7fV0gbm90IGVxdWFsIHRoZSBpbnB1dCBzaXplOlt7fV0PBgduDAZAB28MAnYCcAcHcAwC/QdxDAMUAxUPBwdyEAX1DAdzBggBAEByZWNlaXZlciBpZCByZXF1aXJlZCB3aGlsZSB0byBzdWJtaXQgam91cm5hbCwgdGhlIHNlbmRlcklkIGlzIHt9AQBBY2FuIG5vdCBmaW5kIHRoZSBqb3VybmFsIGluZm8gd2l0aCBqb3VybmFsX2lkIHt9IGFuZCBzZW5kZXJfaWQge30MB3QHdQEAMHB1YmxpYyBkZWxldGUgam91cm5hbCBldmVudCB3aXRoIGpvdXJuYWwgaWQgOiB7fQwDQwbZAQA7Y29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9ldmVudC9EZWxldGVKb3VybmFsRXZlbnQMBscHdgwHdwd4AQA7dXNlcjoge30gaGFzIG1vcmUgdGhhbiBvbmUgZHJhZnQgam91cm5hbCB3aXRoIHRlbXBsYXRlSWQge30MB3kHeg8FARMQB3sPBQd8EAd9DAd+B38BACl0aGVyZSBub3QgdmlzaWJsZSBkYXRhIHdpdGggam91cm5hbCBpZCB7fQwHgAeBDwYHghAHgwwGLweEDAMfB2gBAD5ub25lIHBlcm1pc3Npb24gdG8gcXVlcnkgam91cm5hbCByZWFkIHN0YXRpYyB3aXRoIHVzZXIgaWQgOiB7fQwHhQX4DAeGBhMBACF0aGVyZSBub3Qgam91cm5hbCBpbmZvIHdpdGggaWQge30MAywCyAcF6gwHhweIDAeJB4oHB4sMBn8HjAwHjQeOAQAxY2FuIG5vdCByZXZva2Ugam91cm5hbCB3aXRoIGlkIHt9IGV4Y2VlZCB7fSBtaW51cwwHjwX4DAeQB2gBADlmYWlsIHRvIHJldm9rZSBqb3VybmFsIGJ5IGpvdXJuYWxJZCB7fSBhbmQgb3BlcmF0b3IgaXMge30BACB0ay9teWJhdGlzL21hcHBlci9lbnRpdHkvRXhhbXBsZQwCLgeRDAeSB5UHB5YMB5cHmAwHmQeaAQBAY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9ldmVudC9XaXRoZHJhd1dvcmtOb3RpZnlFdmVudAwCLgebAQATam91cm5hbF9yZXZva2VfdGltZQEAFmphdmEvbGFuZy9DaGFyU2VxdWVuY2UMB5wHnQwB+AH1AQA4ZmFpbCBnZXQgdGhlIGpvdXJuYWwgcmV2b2tlIHRpbWUsIHVzaW5nIHRoZSBkZWZhdWx0IHRpbWUMBfQHRgwCKgIrBweeDAefB6ABAE5jb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbFVucmVhZE51bUluZm8MB6EGLQcHogwHowekDAelBvgHB6YMB6cHqAwGfgX+DAepBqoMB6oHqAwC4ALhDAIPAhAHB6sMB6wHrQEAKW5vdGlmeSBzZW5kaW5nIHN1Y2Nlc3MsIG1zZyByZXF1ZXN0IGlzIHt9AQAobm90aWZ5IHNlbmRpbmcgZmFpbGVkLCBtc2cgcmVxdWVzdCBpcyB7fQcHrgwHrwYIDAewBhMMB7EGngwB9wH1BweyDAezB7QHBewMBe0GngwHtQaeDAe2BqAPBge3DAe4B50MBigGFQEAAAEAIG5vbmUgYWNjb3VudCBuYW1lIHdpdGggdXNlcklkIHt9DAafB7kMBk8DYAwG4waqDAbmBqoPBge6EAN4DAe7Bi0PBge8EAYPDwYHvRAHvgwGKAe/DAfAB8EPBgfCEAOGDAYXB8MPBgfEEAamAQARamF2YS9sYW5nL0Jvb2xlYW4MB8UG1gEAJm5vbmUgam91cm5hbERvIGluZm8gd2l0aCBqb3VybmFsIGlkIHt9DwYHxgwGKAfHDwYHyA8GB8kPBgfKDwYHywwB+wH1AQBCY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9zZXJ2aWNlL2ltcGwvSm91cm5hbFNlcnZpY2VJbXBsBwfMDAfNB84BADljb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3NlcnZpY2UvSm91cm5hbFNlcnZpY2UBAAMuLi4BAExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVxdWVzdC9SZWNlaXZlSm91cm5hbFF1ZXJ5AQAOamF2YS9sYW5nL0xvbmcBAExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVxdWVzdC9TZW5kaW5nSm91cm5hbFF1ZXJ5AQA/Y29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvSm91cm5hbERvAQAzY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2VudW1zL0xhbmdFbnVtAQBGY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvVGVtcGxhdGVVc2VOdW1EbwEAI29yZy9hcGFjaGUvY29tbW9ucy9sYW5nMy90dXBsZS9QYWlyAQAXamF2YS90aW1lL0xvY2FsRGF0ZVRpbWUBABdqYXZhL3V0aWwvc3RyZWFtL1N0cmVhbQEAMGNvbS9hbGliYWJhL2dvdi9jbG91ZC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbwEADGdldEFjY291bnRJZAEAEigpTGphdmEvbGFuZy9Mb25nOwEADGdldFN0YXJ0VGltZQEACmdldEVuZFRpbWUBAAlsb25nVmFsdWUBAAQoSilWAQAQb3JnL3NsZjRqL0xvZ2dlcgEABHdhcm4BABUoTGphdmEvbGFuZy9TdHJpbmc7KVYBADhjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZW51bXMvRXJyb3JDb2RlRW51bQEAD1BBUkFNRVRFUl9FUlJPUgEAOkxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZW51bXMvRXJyb3JDb2RlRW51bTsBAD0oTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9lbnVtcy9FcnJvckNvZGVFbnVtOylWAQALZ2V0U2VuZGVySWQBAApnZXRSZWFsbUlkAQANZ2V0VGVtcGxhdGVJZAEAD2dldEpvdXJuYWxTdGF0ZQEAFSgpTGphdmEvbGFuZy9JbnRlZ2VyOwEATGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvbWFwcGVyL0pvdXJuYWxWaXNpYmxlRG9NYXBwZXIBABRjb3VudFJlY2VpdmVKb3VybmFscwEAiChMamF2YS9sYW5nL0xvbmc7TGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7TGphdmEvdXRpbC9EYXRlO0xqYXZhL3V0aWwvRGF0ZTtMamF2YS9sYW5nL0ludGVnZXI7KUxqYXZhL2xhbmcvSW50ZWdlcjsBAAhpbnRWYWx1ZQEAAygpSQEADHNldFRvdGFsU2l6ZQEASyhJKUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVxdWVzdC9Gcm9udFBhZ2VCZWFuOwEAFWphdmEvdXRpbC9Db2xsZWN0aW9ucwEACWVtcHR5TGlzdAEAEigpTGphdmEvdXRpbC9MaXN0OwEAlihMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3JlcXVlc3QvRnJvbnRQYWdlQmVhbjtMamF2YS91dGlsL0NvbGxlY3Rpb247KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvc2hhcmVkL21vZGVsL3Jlc3VsdC9QYWdlUmVzdWx0OwEACWdldFBhZ2VObwEAC2dldFBhZ2VTaXplAQAPcGFyc2VQYWdlUGFyYW1zAQApKElJKUxvcmcvYXBhY2hlL2NvbW1vbnMvbGFuZzMvdHVwbGUvUGFpcjsBAAdnZXRMZWZ0AQAUKClMamF2YS9sYW5nL09iamVjdDsBAAhnZXRSaWdodAEAqyhMamF2YS9sYW5nL0xvbmc7TGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7TGphdmEvdXRpbC9EYXRlO0xqYXZhL3V0aWwvRGF0ZTtMamF2YS9sYW5nL0ludGVnZXI7TGphdmEvbGFuZy9JbnRlZ2VyO0xqYXZhL2xhbmcvSW50ZWdlcjspTGphdmEvdXRpbC9MaXN0OwEABnN0cmVhbQEAGygpTGphdmEvdXRpbC9zdHJlYW0vU3RyZWFtOwoHzwfQAQAmKExqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL09iamVjdDsBAFooTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxWaXNpYmxlRG87KUxqYXZhL2xhbmcvTG9uZzsBAAVhcHBseQEAHygpTGphdmEvdXRpbC9mdW5jdGlvbi9GdW5jdGlvbjsBAANtYXABADgoTGphdmEvdXRpbC9mdW5jdGlvbi9GdW5jdGlvbjspTGphdmEvdXRpbC9zdHJlYW0vU3RyZWFtOwEAG2phdmEvdXRpbC9zdHJlYW0vQ29sbGVjdG9ycwEABnRvTGlzdAEAHigpTGphdmEvdXRpbC9zdHJlYW0vQ29sbGVjdG9yOwEAB2NvbGxlY3QBADAoTGphdmEvdXRpbC9zdHJlYW0vQ29sbGVjdG9yOylMamF2YS9sYW5nL09iamVjdDsBAB9jb20vYWxpYmFiYS9mYXN0anNvbi9KU09OT2JqZWN0AQAMdG9KU09OU3RyaW5nAQAmKExqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL1N0cmluZzsBACgoTGphdmEvbGFuZy9TdHJpbmc7W0xqYXZhL2xhbmcvT2JqZWN0OylWAQAub3JnL2FwYWNoZS9jb21tb25zL2NvbGxlY3Rpb25zL0NvbGxlY3Rpb25VdGlscwEAB2lzRW1wdHkBABkoTGphdmEvdXRpbC9Db2xsZWN0aW9uOylaAQA3Y29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9jb25maWcvRGlhbW9uZENvbmZpZwEAA2dldAEAJihMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmc7AQASamF2YS91dGlsL09wdGlvbmFsAQAKb2ZOdWxsYWJsZQEAKChMamF2YS9sYW5nL09iamVjdDspTGphdmEvdXRpbC9PcHRpb25hbDsBABUoTGphdmEvbGFuZy9PYmplY3Q7KVoKAfEH0QEABHRlc3QBACAoKUxqYXZhL3V0aWwvZnVuY3Rpb24vUHJlZGljYXRlOwEABmZpbHRlcgEANChMamF2YS91dGlsL2Z1bmN0aW9uL1ByZWRpY2F0ZTspTGphdmEvdXRpbC9PcHRpb25hbDsKAB4H0gEAJyhMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9JbnRlZ2VyOwEAMyhMamF2YS91dGlsL2Z1bmN0aW9uL0Z1bmN0aW9uOylMamF2YS91dGlsL09wdGlvbmFsOwEAUWNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvbWFuYWdlci9jb21tZW50YW5kbGlrZS9Db21tZW50QW5kTGlrZUNvbnN0YW50cwEAD0xJS0VfTElTVF9RVUVSWQEABm9yRWxzZQEADXNldEpvdXJuYWxJZHMBAGYoTGphdmEvdXRpbC9MaXN0OylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9tYW5hZ2VyL2NvbW1lbnRhbmRsaWtlL2xpa2UvSm91cm5hbExpa2VRdWVyeUR0bzsBAE5jb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL21hbmFnZXIvY29tbWVudGFuZGxpa2UvbGlrZS9MaWtlUXVlcnlGYWNhZGUBABNiYXRjaFF1ZXJ5TGlrZUluZm9zAQB4KExqYXZhL2xhbmcvSW50ZWdlcjtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9tYW5hZ2VyL2NvbW1lbnRhbmRsaWtlL2xpa2UvSm91cm5hbExpa2VRdWVyeUR0bzspTGphdmEvdXRpbC9NYXA7AQAVKExqYXZhL2xhbmcvT2JqZWN0OylWCgHxB9MBAAZhY2NlcHQBAC4oTGphdmEvdXRpbC9NYXA7KUxqYXZhL3V0aWwvZnVuY3Rpb24vQ29uc3VtZXI7AQAHZm9yRWFjaAEAIChMamF2YS91dGlsL2Z1bmN0aW9uL0NvbnN1bWVyOylWCgHxB9QBABZDT01NRU5UX0xJU1RfU1RSVUNUVVJFAQBsKExqYXZhL3V0aWwvTGlzdDspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvbWFuYWdlci9jb21tZW50YW5kbGlrZS9jb21tZW50L0pvdXJuYWxDb21tZW50UXVlcnlEdG87AQBUY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9tYW5hZ2VyL2NvbW1lbnRhbmRsaWtlL2NvbW1lbnQvQ29tbWVudFF1ZXJ5RmFjYWRlAQAVYmF0Y2hRdWVyeUNvbW1lbnRJbmZvAQB+KExqYXZhL2xhbmcvSW50ZWdlcjtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9tYW5hZ2VyL2NvbW1lbnRhbmRsaWtlL2NvbW1lbnQvSm91cm5hbENvbW1lbnRRdWVyeUR0bzspTGphdmEvdXRpbC9NYXA7CgHxB9UKAfEH1goB8QfXCgHxB9gKAfEH2QEACmlzTm90RW1wdHkBADgoTGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvT2JqZWN0OwoB8QfaAQAlKClMamF2YS91dGlsL2Z1bmN0aW9uL0JpbmFyeU9wZXJhdG9yOwEABXRvTWFwAQB7KExqYXZhL3V0aWwvZnVuY3Rpb24vRnVuY3Rpb247TGphdmEvdXRpbC9mdW5jdGlvbi9GdW5jdGlvbjtMamF2YS91dGlsL2Z1bmN0aW9uL0JpbmFyeU9wZXJhdG9yOylMamF2YS91dGlsL3N0cmVhbS9Db2xsZWN0b3I7CgHxB9sBAEsoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxWaXNpYmxlRG87KVYBAIIoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvc2VydmljZS9pbXBsL0pvdXJuYWxTZXJ2aWNlSW1wbDtMamF2YS91dGlsL01hcDtMamF2YS91dGlsL0xpc3Q7KUxqYXZhL3V0aWwvZnVuY3Rpb24vQ29uc3VtZXI7CgHxB9wBADtjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL2NhY2hlL0pvdXJuYWxEZXRhaWxDYWNoZQEAGWdldFRoZUpvdXJuYWxCeUpvdXJuYWxJZHMBACIoTGphdmEvdXRpbC9MaXN0OylMamF2YS91dGlsL0xpc3Q7CgHxB90BAEQoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxEbzspVgEAPihMamF2YS91dGlsL01hcDtMamF2YS91dGlsL0xpc3Q7KUxqYXZhL3V0aWwvZnVuY3Rpb24vQ29uc3VtZXI7AQBZKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbEluZm87KUxqYXZhL2xhbmcvTG9uZzsBABtnZXRBbGxSZWFkU3RhdGVCeUpvdXJuYWxJZHMBAB5jb20vZ29vZ2xlL2NvbW1vbi9jb2xsZWN0L01hcHMBABBuZXdDb25jdXJyZW50TWFwAQAmKClMamF2YS91dGlsL2NvbmN1cnJlbnQvQ29uY3VycmVudE1hcDsKAfEH3goB8QffAQBiKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbFVucmVhZE51bUluZm87KUxqYXZhL2xhbmcvTG9uZzsKAfEH4AoB8QfhAQBTKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbFVucmVhZE51bUluZm87KVYBAD1jb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL2NhY2hlL1RocmVhZExvY2FsTGFuZ0NhY2hlAQAHZ2V0TGFuZwEANygpTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9lbnVtcy9MYW5nRW51bTsKAfEH4gEAmChMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9zZXJ2aWNlL2ltcGwvSm91cm5hbFNlcnZpY2VJbXBsO0xjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZW51bXMvTGFuZ0VudW07KUxqYXZhL3V0aWwvZnVuY3Rpb24vQ29uc3VtZXI7AQBJY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9pbmZyYXN0cnVjdHVyZS9zZXJ2aWNlL1VzZXJJbmZvU2VydmljZQEAEGdldFVzZXJJbmZvQnlJZHMBADIoTGphdmEvdXRpbC9MaXN0O0xqYXZhL2xhbmcvTG9uZzspTGphdmEvdXRpbC9MaXN0OwoB8QfjAQAfKClMamF2YS91dGlsL2Z1bmN0aW9uL0NvbnN1bWVyOwEABHBlZWsBADgoTGphdmEvdXRpbC9mdW5jdGlvbi9Db25zdW1lcjspTGphdmEvdXRpbC9zdHJlYW0vU3RyZWFtOwEAXShMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxVc2VySW5mbzspTGphdmEvbGFuZy9Mb25nOwEAXyhMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL0pvdXJuYWxVc2VySW5mbzspTGphdmEvbGFuZy9TdHJpbmc7CgHxB+QKAfEH5QEAaChMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9kb21haW4vVXNlckluZm87TGphdmEvdXRpbC9NYXA7KUxqYXZhL3V0aWwvZnVuY3Rpb24vQ29uc3VtZXI7AQA7Y29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2VudW1zL0pvdXJuYWxTdGF0ZUVudW0BAAZTVUJNSVQBAD1MY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2VudW1zL0pvdXJuYWxTdGF0ZUVudW07AQAHZ2V0Q29kZQEAB3ZhbHVlT2YBABYoSSlMamF2YS9sYW5nL0ludGVnZXI7AQAPc2V0Sm91cm5hbFN0YXRlAQBjKExqYXZhL2xhbmcvSW50ZWdlcjspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXF1ZXN0L1NlbmRpbmdKb3VybmFsUXVlcnk7AQBFY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9tYXBwZXIvSm91cm5hbERvTWFwcGVyAQARY291bnRTZW5kSm91cm5hbHMBAHgoTGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7TGphdmEvdXRpbC9EYXRlO0xqYXZhL3V0aWwvRGF0ZTtMamF2YS9sYW5nL0ludGVnZXI7KUxqYXZhL2xhbmcvSW50ZWdlcjsBAAlzZXRQYWdlTm8BAAtzZXRQYWdlU2l6ZQEAmyhMamF2YS9sYW5nL0xvbmc7TGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvTG9uZztMamF2YS91dGlsL0RhdGU7TGphdmEvdXRpbC9EYXRlO0xqYXZhL2xhbmcvSW50ZWdlcjtMamF2YS9sYW5nL0ludGVnZXI7TGphdmEvbGFuZy9JbnRlZ2VyOylMamF2YS91dGlsL0xpc3Q7CgHxB+YBAJ0oTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvc2VydmljZS9pbXBsL0pvdXJuYWxTZXJ2aWNlSW1wbDtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9kb21haW4vVXNlckluZm87KUxqYXZhL3V0aWwvZnVuY3Rpb24vQ29uc3VtZXI7AQBTKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsRG87KUxqYXZhL2xhbmcvTG9uZzsKAfEH5wEAWShMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9kb21haW4vVXNlckluZm87KUxqYXZhL3V0aWwvZnVuY3Rpb24vQ29uc3VtZXI7AQAgZ2V0Sm91cm5hbFZpc2libGVCeUlkQW5kUmVjZWl2ZXIBAEIoTGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7KUxqYXZhL3V0aWwvTGlzdDsBAAZlcXVhbHMBADkoTGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9PYmplY3Q7KVYBABZGT1JCSURERU5fVklFV19KT1VSTkFMAQAYZ2V0VGhlSm91cm5hbEJ5Sm91cm5hbElkAQBjKExqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsRG87AQAGZm9ybWF0AQA5KExqYXZhL2xhbmcvU3RyaW5nO1tMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9TdHJpbmc7AQAUREFUQUJBU0VfSEFTX05PX0RBVEEBAERjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3Rvb2wvY29udmVydGVyL0NvbW1vbkR0b0NvbnZlcnRlcgEAEWpvdXJuYWxJbmZvRnJvbURvAQANc2luZ2xldG9uTGlzdAEAJChMamF2YS9sYW5nL09iamVjdDspTGphdmEvdXRpbC9MaXN0OwEAFShJKUxqYXZhL2xhbmcvT2JqZWN0OwEADmdldEFjY291bnROYW1lAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAA5zZXRBY2NvdW50TmFtZQEAWyhMamF2YS9sYW5nL1N0cmluZzspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsSW5mbzsBAA5zZXRMb2dpblVzZXJJZAEAWShMamF2YS9sYW5nL0xvbmc7KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbEluZm87AQA5Y29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL3Rvb2wvUG9qb1Jlc3VsdFV0aWxzAQBKKExqYXZhL2xhbmcvT2JqZWN0OylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL3NoYXJlZC9tb2RlbC9yZXN1bHQvUG9qb1Jlc3VsdDsBAAlnZXRJc1JlYWQBABUoKUxqYXZhL2xhbmcvQm9vbGVhbjsBAAxib29sZWFuVmFsdWUBAAMoKVoBABZzZXROZWVkVXBkYXRlUmVhZFN0YXRlAQAWKExqYXZhL2xhbmcvSW50ZWdlcjspVgEADGdldEpvdXJuYWxJZAEADWdldFJlY2VpdmVySWQBADUoTGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvTG9uZzspVgEANW9yZy9zcHJpbmdmcmFtZXdvcmsvY29udGV4dC9BcHBsaWNhdGlvbkV2ZW50UHVibGlzaGVyAQAMcHVibGlzaEV2ZW50AQAxKExvcmcvc3ByaW5nZnJhbWV3b3JrL2NvbnRleHQvQXBwbGljYXRpb25FdmVudDspVgEAH2NvbS9nb29nbGUvY29tbW9uL2NvbGxlY3QvTGlzdHMBAAxuZXdBcnJheUxpc3QBABcoKUxqYXZhL3V0aWwvQXJyYXlMaXN0OwEAE2dldFJlY2VpdmVySWRTdHJpbmcBAB5jb20vZ29vZ2xlL2NvbW1vbi9iYXNlL1N0cmluZ3MBAA1pc051bGxPckVtcHR5AQAJV0lUSF9EUkFXAQAJU0VORF9GQUlMAQAFc3BsaXQBACcoTGphdmEvbGFuZy9TdHJpbmc7KVtMamF2YS9sYW5nL1N0cmluZzsBABBqYXZhL3V0aWwvQXJyYXlzAQAuKFtMamF2YS9sYW5nL09iamVjdDspTGphdmEvdXRpbC9zdHJlYW0vU3RyZWFtOwoDrQfoAQA/Y29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9maWx0ZXIvbG9naW4vTG9naW5Vc2VySG9sZGVyAQAJVVNFUl9JTkZPAQAXTGphdmEvbGFuZy9UaHJlYWRMb2NhbDsBABVqYXZhL2xhbmcvVGhyZWFkTG9jYWwBABBzZXRSZWNlaXZlVXNlcklkAQBZKExqYXZhL3V0aWwvTGlzdDspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsSW5mbzsKAfEH6QEAE3NldEpvdXJuYWxDcmVhdG9ySWQBAGwoTGphdmEvbGFuZy9Mb25nOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9tYW5hZ2VyL2NvbW1lbnRhbmRsaWtlL2NvbW1lbnQvSm91cm5hbENvbW1lbnRRdWVyeUR0bzsBAAxzZXRKb3VybmFsSWQBABBxdWVyeUNvbW1lbnRJbmZvAQB/KExqYXZhL2xhbmcvSW50ZWdlcjtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9tYW5hZ2VyL2NvbW1lbnRhbmRsaWtlL2NvbW1lbnQvSm91cm5hbENvbW1lbnRRdWVyeUR0bzspTGphdmEvdXRpbC9MaXN0OwEADnNldENvbW1lbnRJbmZvCgHxB+oBABRMSUtFX0xJU1RfUEFHRV9RVUVSWQEAZihMamF2YS9sYW5nL0xvbmc7KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL21hbmFnZXIvY29tbWVudGFuZGxpa2UvbGlrZS9Kb3VybmFsTGlrZVF1ZXJ5RHRvOwEADnF1ZXJ5TGlrZUluZm9zAQB5KExqYXZhL2xhbmcvSW50ZWdlcjtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9tYW5hZ2VyL2NvbW1lbnRhbmRsaWtlL2xpa2UvSm91cm5hbExpa2VRdWVyeUR0bzspTGphdmEvdXRpbC9MaXN0OwEAC3NldExpa2VJbmZvCgHxB+sBAAhhbnlNYXRjaAEAIShMamF2YS91dGlsL2Z1bmN0aW9uL1ByZWRpY2F0ZTspWgEAFihaKUxqYXZhL2xhbmcvQm9vbGVhbjsBAAhzZXRMaWtlZAEAXChMamF2YS9sYW5nL0Jvb2xlYW47KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbEluZm87AQAaZ2V0QWxsUmVhZFN0YXRlQnlKb3VybmFsSWQBACIoTGphdmEvbGFuZy9Mb25nOylMamF2YS91dGlsL0xpc3Q7AQAnKExqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvT2JqZWN0OylWAQBcKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsVmlzaWJsZURvOylMamF2YS9sYW5nL09iamVjdDsBADdjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3V0aWxzL0NvbGxlY3Rpb25VdGlsAQANZGlzdGluY3RCeUtleQEAPShMamF2YS91dGlsL2Z1bmN0aW9uL0Z1bmN0aW9uOylMamF2YS91dGlsL2Z1bmN0aW9uL1ByZWRpY2F0ZTsBADkoTGphdmEvdXRpbC9mdW5jdGlvbi9QcmVkaWNhdGU7KUxqYXZhL3V0aWwvc3RyZWFtL1N0cmVhbTsKAfEH7AoB8QftAQAFY291bnQBABMoSilMamF2YS9sYW5nL0xvbmc7AQAMc2V0VW5SZWFkTnVtAQBcKExqYXZhL2xhbmcvSW50ZWdlcjspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsSW5mbzsBAARzaXplAQAOc2V0UmVjZWl2ZXJOdW0BAAtzZXRTZW5kZXJJZAEATmNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXF1ZXN0L0pvdXJuYWxPcGVyYXRlQ29tbWFuZAEAEigpTGphdmEvbGFuZy9CeXRlOwEADmphdmEvbGFuZy9CeXRlAQATKEIpTGphdmEvbGFuZy9CeXRlOwEAEU9QRVJBVElPTl9JTlZBTElEAQAKZmluZEJ5Q29kZQEAQChJKUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZW51bXMvSm91cm5hbFN0YXRlRW51bTsBAENjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3Rvb2wvY29udmVydGVyL0NvbW1vbkRvQ29udmVydGVyAQAQam91cm5hbERvRnJvbUR0bwEAzShMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3JlcXVlc3QvSm91cm5hbE9wZXJhdGVDb21tYW5kO0xjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbzspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxEbzsBADljb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL21hbmFnZXIvSm91cm5hbE1hbmFnZXIBAEQoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxEbzspSQEAOmNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvY2FjaGUvSm91cm5hbERyYWZ0Q2FjaGUBAA9zZXRKb3VybmFsRHJhZnQBADUoTGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvTG9uZzspTGphdmEvbGFuZy9JbnRlZ2VyOwEADHNldENyZWF0ZWRCeQEAEyhMamF2YS9sYW5nL0xvbmc7KVYBAAxnZXRDcmVhdGVkQXQBABIoKUxqYXZhL3V0aWwvRGF0ZTsBAAxzZXRDcmVhdGVkQXQBABMoTGphdmEvdXRpbC9EYXRlOylWAQAQc2V0Sm91cm5hbERldGFpbAEAUihMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvSm91cm5hbERvOylMamF2YS91dGlsL01hcDsBAAlwYXJzZUxvbmcBABUoTGphdmEvbGFuZy9TdHJpbmc7KUoBABZOT1RfQUxMT1dfU1VCTUlUX0FHSUFOAQAFZ2V0SWQBAAxzZXRBY2NvdW50SWQBAApzZXRSZWFsbUlkAQALZ2V0TGFzdE5hbWUBAAtzZXRMYXN0TmFtZQEAEmRlbGV0ZUpvdXJuYWxEcmFmdAEAP2NvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvbXEvcm9ja2V0L1NlbmRKb3VybmFsU2F2ZU1zZwEAB2V4ZWN1dGUBAE0oTGphdmEvbGFuZy9Mb25nO0xjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbzspVgEABWVycm9yAQAOZ2V0UmVjZWl2ZXJJZHMBACRvcmcvYXBhY2hlL2NvbW1vbnMvbGFuZzMvU3RyaW5nVXRpbHMKAfEH7gEAEGdldEpvdXJuYWxEZXRhaWwBABljb20vYWxpYmFiYS9mYXN0anNvbi9KU09OAQALcGFyc2VPYmplY3QBADcoTGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9DbGFzczspTGphdmEvbGFuZy9PYmplY3Q7AQARZ2V0UGFyYWdyYXBoSW5mb3MBACRvcmcvc3ByaW5nZnJhbWV3b3JrL3V0aWwvT2JqZWN0VXRpbHMKB+8H8AEATChMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3Jlc3BvbnNlL1BhcmFncmFwaEluZm87KVoKAfEH8QEAB2ZsYXRNYXAKAfEH8gEAA3J1bgEBGihMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9zZXJ2aWNlL2ltcGwvSm91cm5hbFNlcnZpY2VJbXBsO0xjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL2RvbWFpbi9Vc2VySW5mbztMamF2YS91dGlsL0xpc3Q7TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxEbztMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2VudW1zL0xhbmdFbnVtOylMamF2YS9sYW5nL1J1bm5hYmxlOwEAHWphdmEvdXRpbC9jb25jdXJyZW50L0V4ZWN1dG9yAQAXKExqYXZhL2xhbmcvUnVubmFibGU7KVYBADhjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZW51bXMvSW1NZXNzYWdlRW51bQEAEUNBUkRfTUVTU0FHRV9TRU5EAQA6TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9lbnVtcy9JbU1lc3NhZ2VFbnVtOwEAcShMamF2YS9sYW5nL09iamVjdDtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2VudW1zL0ltTWVzc2FnZUVudW07TGphdmEvbGFuZy9PYmplY3Q7TGphdmEvdXRpbC9MaXN0OylWCgHxB/MBAJMoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvc2VydmljZS9pbXBsL0pvdXJuYWxTZXJ2aWNlSW1wbDtMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9ldmVudC9JbU1lc3NhZ2VFdmVudDspTGphdmEvbGFuZy9SdW5uYWJsZTsBAFMoTGphdmEvbGFuZy9Mb25nOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9ub3RpY2UvTm90aWNlTXNnUGFyYW1zOwEACXNldFNlbmRlcgEAVShMamF2YS9sYW5nL1N0cmluZzspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vbm90aWNlL05vdGljZU1zZ1BhcmFtczsKACgFLwEAJChMamF2YS9sYW5nL0xvbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwEAB2pvaW5pbmcBADYoTGphdmEvbGFuZy9DaGFyU2VxdWVuY2U7KUxqYXZhL3V0aWwvc3RyZWFtL0NvbGxlY3RvcjsBAA5zZXRSZWNlaXZlcklkcwEAQWNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vbm90aWNlL05vdGlmeU1zZ1R5cGVFbnVtAQARV09SS19OT1RJRklDQVRJT04BAENMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9ub3RpY2UvTm90aWZ5TXNnVHlwZUVudW07AQAUc2V0Tm90aWZ5TXNnVHlwZUVudW0BAIYoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vbm90aWNlL05vdGlmeU1zZ1R5cGVFbnVtOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9ub3RpY2UvTm90aWNlTXNnUGFyYW1zOwEAC3NldFRlbmFudElkAQA6Y29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS91dGlscy9JbnRlcm5hdGlvbmFsVXRpbAEAEGdldExvY2FsZU1lc3NhZ2UBAFsoTGphdmEvbGFuZy9TdHJpbmc7TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9lbnVtcy9MYW5nRW51bTspTGphdmEvbGFuZy9TdHJpbmc7AQAPZ2V0Sm91cm5hbFRpdGxlAQALc2V0TXNnVGl0bGUBAApzZXRNc2d0eXBlAQBZKExqYXZhL2xhbmcvU3RyaW5nOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9ub3RpY2UvV29ya05vdGlmaWNhdGlvbk1zZzsBAA9zZXRTaW5nbGVfdGl0bGUBAFAoTGphdmEvbGFuZy9TdHJpbmc7KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL25vdGljZS9BY3Rpb25DYXJkOwEACHNldFRpdGxlAQAGYXBwZW5kAQAtKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1N0cmluZ0J1aWxkZXI7AQAtKExqYXZhL2xhbmcvT2JqZWN0OylMamF2YS9sYW5nL1N0cmluZ0J1aWxkZXI7AQAMZ2V0Q3JlYXRlZEJ5AQAIdG9TdHJpbmcBAA1zZXRTaW5nbGVfdXJsAQALc2V0TWFya2Rvd24BAA5zZXRBY3Rpb25fY2FyZAEAgyhMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9ub3RpY2UvQWN0aW9uQ2FyZDspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vbm90aWNlL1dvcmtOb3RpZmljYXRpb25Nc2c7AQAGc2V0TXNnAQAqKExqYXZhL2xhbmcvU3RyaW5nO0xqYXZhL2xhbmcvVGhyb3dhYmxlOylWAQALZ2V0VXBkYXRlQXQBABBzZXRSZWNlbnRVc2VUaW1lAQANc2V0VGVtcGxhdGVJZAEAEXNldFJlY2VpdmVVc2VySWRzAQALZ2V0VGVuYW50SWQBAE9jb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL21hcHBlci9UZW1wbGF0ZVJlY2VudFVzZURvTWFwcGVyAQAPaW5zZXJ0U2VsZWN0aXZlAQAVKExqYXZhL2xhbmcvT2JqZWN0OylJAQBAY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9jYWNoZS9SZWNlbnRUZW1wbGF0ZUxpc3RDYWNoZQEAG3Vwc2VydEJ5VXNlcklkQW5kVGVtcGxhdGVJZAEAMyhMamF2YS9sYW5nL0xvbmc7TGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvTG9uZzspVgEATGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvbWFwcGVyL1RlbXBsYXRlVXNlTnVtRG9NYXBwZXIBABBmaW5kQnlUZW1wbGF0ZUlkAQBqKExqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7KUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9UZW1wbGF0ZVVzZU51bURvOwEADmdldFRlbXBsYXRlTnVtAQAZdXBkYXRlVXNlck51bUJ5VGVtcGxhdGVJZAEANihMamF2YS9sYW5nL0xvbmc7TGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvSW50ZWdlcjspSQEAQ2NvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvY2FjaGUvUmVjb21tZW5kVGVtcGxhdGVMaXN0Q2FjaGUBACB1cHNlcnRSZWNvbW1lbmRUZW1wbGF0ZUxpc3RDYWNoZQEANihMamF2YS9sYW5nL0xvbmc7TGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvSW50ZWdlcjspVgEACWdldFNlbmRBdAEAC3NldENyZWF0ZUF0AQAJc2V0SXNSZWFkAQAWKExqYXZhL2xhbmcvQm9vbGVhbjspVgEAEyhMamF2YS9sYW5nL0J5dGU7KVYBABFzZXRTZW5kZXJUZW5hbnRJZAEAE3NldFJlY2VpdmVyVGVuYW50SWQKAfEH9AEAdyhMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29yZS9wZXJzaXN0ZW5jZS9lbnRpdHkvSm91cm5hbFZpc2libGVEbztMamF2YS91dGlsL0xpc3Q7KUxqYXZhL3V0aWwvZnVuY3Rpb24vQ29uc3VtZXI7CgHxB/UBAAppbnNlcnRMaXN0AQATKExqYXZhL3V0aWwvTGlzdDspSQEAGnVwZGF0ZVJlYWRTdGF0ZUJ5Sm91cm5hbElkAQAjKExqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7KUkBAApuZXdIYXNoTWFwAQAVKClMamF2YS91dGlsL0hhc2hNYXA7AQADcHV0AQAbdXBkYXRlUmVhZFN0YXRlQnlKb3VybmFsSWRzAQAjKExqYXZhL3V0aWwvTGlzdDtMamF2YS9sYW5nL0xvbmc7KUkKAfEH9gEALyhMamF2YS91dGlsL0xpc3Q7KUxqYXZhL3V0aWwvZnVuY3Rpb24vQ29uc3VtZXI7AQA+Y29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL3Rvb2wvQ29sbGVjdGlvblJlc3VsdFV0aWwBAFQoTGphdmEvdXRpbC9Db2xsZWN0aW9uOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL3NoYXJlZC9tb2RlbC9yZXN1bHQvQ29sbGVjdGlvblJlc3VsdDsKAfEH9wEAEGdldFJlY2VpdmVVc2VySWQBAAlieXRlVmFsdWUBAAMoKUIBAGIoTGphdmEvbGFuZy9Mb25nOylMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2pvdXJuYWwvY29tbW9uL2R0by9zZXJ2aWNlL3JlcXVlc3QvSm91cm5hbE9wZXJhdGVDb21tYW5kOwEAGmdldElkQnlUZW1wbGF0ZUlkQW5kVXNlcklkAQAyKExqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7KUxqYXZhL2xhbmcvTG9uZzsBABFnZXRKb3VybmFsRGV0YWlscwEATygpTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsRGV0YWlsSW5mbzsBAF8oTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsRGV0YWlsSW5mbzspTGphdmEvdXRpbC9MaXN0OwoFsgf4AQBdKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvUGFyYWdyYXBoSW5mbzspTGphdmEvbGFuZy9TdHJpbmc7AQAQY291bnRCeUpvdXJuYWxJZAEAOChMamF2YS9sYW5nL0xvbmc7TGphdmEvbGFuZy9JbnRlZ2VyOylMamF2YS9sYW5nL0ludGVnZXI7AQARc2VsZWN0QnlKb3VybmFsSWQBAFsoTGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvSW50ZWdlcjtMamF2YS9sYW5nL0ludGVnZXI7TGphdmEvbGFuZy9JbnRlZ2VyOylMamF2YS91dGlsL0xpc3Q7CgHxB/kBAEsoTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvcmUvcGVyc2lzdGVuY2UvZW50aXR5L0pvdXJuYWxWaXNpYmxlRG87KVoBAFooTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vZG9tYWluL1VzZXJJbmZvOylMamF2YS91dGlsL2Z1bmN0aW9uL1ByZWRpY2F0ZTsBABNGT1JCSURERU5fT1BFUkFUSU9OAQAIZGlzdGluY3QBAANub3cBABsoKUxqYXZhL3RpbWUvTG9jYWxEYXRlVGltZTsBAAxtaW51c01pbnV0ZXMBABwoSilMamF2YS90aW1lL0xvY2FsRGF0ZVRpbWU7AQASamF2YS9zcWwvVGltZXN0YW1wAQAvKExqYXZhL3RpbWUvTG9jYWxEYXRlVGltZTspTGphdmEvc3FsL1RpbWVzdGFtcDsBAAZiZWZvcmUBABMoTGphdmEvdXRpbC9EYXRlOylaAQAWQ0FOX05PVF9SRVZPS0VfSk9VUk5BTAEAHHJldm9jYXRpb25Kb3VybmFsQnlKb3VybmFsSWQBABQoTGphdmEvbGFuZy9DbGFzczspVgEADmNyZWF0ZUNyaXRlcmlhAQAIQ3JpdGVyaWEBAAxJbm5lckNsYXNzZXMBAC0oKUx0ay9teWJhdGlzL21hcHBlci9lbnRpdHkvRXhhbXBsZSRDcml0ZXJpYTsBACl0ay9teWJhdGlzL21hcHBlci9lbnRpdHkvRXhhbXBsZSRDcml0ZXJpYQEACmFuZEVxdWFsVG8BAFEoTGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9PYmplY3Q7KUx0ay9teWJhdGlzL21hcHBlci9lbnRpdHkvRXhhbXBsZSRDcml0ZXJpYTsBABh1cGRhdGVCeUV4YW1wbGVTZWxlY3RpdmUBACcoTGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9PYmplY3Q7KUkBAEUoTGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9Mb25nO0xqYXZhL2xhbmcvTG9uZztMamF2YS9sYW5nL0xvbmc7KVYBAAtpc05vbmVCbGFuawEAHChbTGphdmEvbGFuZy9DaGFyU2VxdWVuY2U7KVoBAEhjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3NlcnZpY2UvSm91cm5hbENvbnRlbnRTZWN1cml0eVNlcnZpY2UBABJjaGVja1NlbnNpdGl2ZVdvcmQBACUoTGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9Mb25nOylWAQADYWRkAQAjb3JnL3NwcmluZ2ZyYW1ld29yay9iZWFucy9CZWFuVXRpbHMBAA5jb3B5UHJvcGVydGllcwEAJyhMamF2YS9sYW5nL09iamVjdDtMamF2YS9sYW5nL09iamVjdDspVgEADXNldFJlY2VpdmVySWQBADpjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZW51bXMvUmVjZWl2ZVR5cGVFbnVtAQAPSU1fQ0FSRF9NRVNTQUdFAQA8TGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9lbnVtcy9SZWNlaXZlVHlwZUVudW07AQAOc2V0UmVjZWl2ZVR5cGUBAAxOT1RJRklDQVRJT04BAEhjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL2luZnJhc3RydWN0dXJlL3NlcnZpY2UvTXNnU2VuZFNlcnZpY2UBAAdzZW5kTXNnAQBEKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL25vdGljZS9Ob3RpY2VNc2dQYXJhbXM7KVoBAEdjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvUGFyYWdyYXBoSW5mbwEACmdldEF0VXNlcnMBAAVlbXB0eQEABHRyaW0BADdjb20vYWxpYmFiYS9nb3YvY2xvdWQvY29tbWVudC9hcGkvZHRvL3Jlc3BvbnNlL0xpa2VJbmZvAQAPZ2V0TGlrZVVzZXJJbmZvAQA0KClMY29tL2FsaWJhYmEvZ292L2Nsb3VkL2NvbW1vbi9kdG8vZG9tYWluL1VzZXJJbmZvOwEAEGdldFRlbXBsYXRlVGl0bGUBABBzZXRUZW1wbGF0ZVRpdGxlCgHxB/oBAAtpc05vbmVFbXB0eQEAXyhMamF2YS9sYW5nL1N0cmluZzspTGNvbS9hbGliYWJhL2dvdi9jbG91ZC9qb3VybmFsL2NvbW1vbi9kdG8vc2VydmljZS9yZXNwb25zZS9Kb3VybmFsVXNlckluZm87CgHxB/sBAAtjb250YWluc0tleQoB8Qf8CgHxB/0BAEkoKUxjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb21tb24vZHRvL3NlcnZpY2UvcmVzcG9uc2UvSm91cm5hbEluZm87AQBgKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsRG87KUxqYXZhL3V0aWwvZnVuY3Rpb24vU3VwcGxpZXI7AQAJb3JFbHNlR2V0AQAxKExqYXZhL3V0aWwvZnVuY3Rpb24vU3VwcGxpZXI7KUxqYXZhL2xhbmcvT2JqZWN0OwoB8Qf+AQAuKExqYXZhL3V0aWwvTWFwOylMamF2YS91dGlsL2Z1bmN0aW9uL0Z1bmN0aW9uOwoB8Qf/AQAHc2V0UmVhZAoB8QgAAQBnKExjb20vYWxpYmFiYS9nb3YvY2xvdWQvam91cm5hbC9jb3JlL3BlcnNpc3RlbmNlL2VudGl0eS9Kb3VybmFsVmlzaWJsZURvOylMamF2YS91dGlsL2Z1bmN0aW9uL1N1cHBsaWVyOwoB8QgBCgHxCAIKAfEIAwoB8QgEAQAXb3JnL3NsZjRqL0xvZ2dlckZhY3RvcnkBAAlnZXRMb2dnZXIBACUoTGphdmEvbGFuZy9DbGFzczspTG9yZy9zbGY0ai9Mb2dnZXI7BwgFDAgGCAkMA6IDVwwGfwY0DAOgA30MA58DVwwDngN9DAOdA1cMA5sDfQwDmgNXDAOYA30MA5cDjQwDkAORDAOMA40MA4ADgQwDfwN7DAN8A30MA3oDewwDcwN0DANwA3EMA2wDbQwDaANpDANjA2QMA10DWwwDWgNbDAZ/A0cMA1kDVwwDVgNXDANPA1AMA0wDTQwDSQNKDANGA0cHCAoMCAsGLQwDQQNCDAM/A0AMAz0DPgwDPAM5DAM4AzkMAzMDNAwDMAMxDAgMBp4MAy0DLgwDXwNgDAN3A3gMA34D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GAEJAB4BCgAvARAAOAESAjIAAAAqAAQALwAJAqwCrQADAAAAOQJdAl4AAAAAADkClgKXAAEAEQAoAq8CRQACAkgAAAAMAAEAEQAoAq8CsAACAk0AAAAIAAH8ADgHAnQQCgOhA1AAAQIwAAAAjAACAAMAAAArsgC5tgC6wAC7TCq2Ac1NASylABgstgHOK7YAArYBz7YA+pkABwSnAAQDrAAAAAMCMQAAABYABQAAAQsACgEMAA8BDQAZAQ4AHwENAjIAAAAgAAMAAAArA1EDUgAAAAoAIQI3AjgAAQAPABwDUwNUAAICTQAAAA0AAv0AKQcCTwcDVUABEAoDogNXAAECMAAAAEQAAgABAAAADxL5KrYA+poABwSnAAQDrAAAAAMCMQAAAAYAAQAAAPsCMgAAAAwAAQAAAA8DWAH/AAACTQAAAAUAAg1AAQAIA6MCLwABAjAAAABmAAIAAAAAADYDuAB3swCoBLgAd7MApgO4AHezAcwIuAB3swG0FAHuuADVswD8BLgAd7MB8BMB8bgB8rMACLEAAAABAjEAAAAeAAcAAABZAAcAWgAOAFsAFQBcABwAXQAlAF4ALABgAAQDpAAAAAIDpQIEAAAABgABA6YAAAeUAAAAEgACBZQBqAeTAAkIBwgNCAgAGQPOAAACjABBA88AAwPQA9ED0gPPAAMD8APxA/IDzwADA9AD9QP2A88AAwQABAEEAgPPAAMD8AQHA/IDzwADBAAEDgQCA88AAwPwBA8D8gPPAAMEAAQQBAIDzwADA/AEEQPyA88AAwQABBIEAgPPAAMD0AQUBBUDzwADBBYEFwQYA88AAwQABBwEHQPPAAMEFgQfBBgDzwADBAAEIwQkA88AAwPQBCYEJwPPAAMEAAQrBB0DzwADBAAELAQCA88AAwPQBC0ELgPPAAMEAAQvBB0DzwADBAAEMAQxA88AAwQABDQEAgPPAAMD0AQ2BCcDzwADBAAEOgQ7A88AAwPQBD4EPwPPAAMD0ARABEEDzwADBBYEQgRDA88AAwQABEQEAgPPAAMD0ARTBFQDzwADBAAEVQQCA88AAwPQBFcEWAPPAAMEAARbBAIDzwADA9AEjwSQA88AAwPwBJcD8gPPAAMD8AScA/IDzwADA/AEogSjA88AAwPQBKoEqwPPAAMD0ASvBLADzwADA/AEsQSyA88AAwPQBO0EkAPPAAMD8AT1BPYDzwADA9AE9wT4A88AAwT+BP8E/gPPAAME/gUIBP4DzwADA9AFDgUPA88AAwQABVkFWgPPAAMEAAVcBVoDzwADBAAFZAVaA88AAwQABWoFawPPAAMD0AV3BXgDzwADA9AFeQV6A88AAwPwBPUD8gPPAAMD8AV+BX8DzwADA9AEqgPSA88AAwPwBb0D8gPPAAMD8AXGBccDzwADA/AFyQXHA88AAwXKBcsFzAPPAAMD0AXPBdADzwADBcoF0gXTA88AAwXKBdcFzAPPAAMD0AXZBdADzwADBcoF2gXTA88AAwPwBdsEowPPAAMD8AXcBKM=|$HOME/opt/arthas/hotSwap/classes/com/alibaba/gov/cloud/journal/core/service/impl/JournalServiceImpl.class"
  commaArraybash64FilePath=(${bash64FileAndPathList//\,/ })
  for i in "${!commaArraybash64FilePath[@]}"; do
    verticalArraySingleBash64FileAndPath=(${commaArraybash64FilePath[i]//\|/ })
    createFile ${verticalArraySingleBash64FileAndPath[1]}
    echo ${verticalArraySingleBash64FileAndPath[0]} | base64 --decode >${verticalArraySingleBash64FileAndPath[1]} || return 1
    echo "base64Class decode to path ${verticalArraySingleBash64FileAndPath[1]}"
  done
}

# Usage: doStarteRedefine
doStarteRedefine() {
  createFile $HOME/opt/arthas/hotSwapResult.out
  echo $(tput bold)"arthas start command :$HOME/opt/arthas/as.sh --select ${SELECT_VALUE}  -c \"redefine $HOME/opt/arthas/hotSwap/classes/com/alibaba/gov/cloud/journal/core/service/impl/JournalServiceImpl.class\"  | tee $HOME/opt/arthas/hotSwapResult.out"$(tput sgr0)
  $HOME/opt/arthas/as.sh --select ${SELECT_VALUE} -c "redefine $HOME/opt/arthas/hotSwap/classes/com/alibaba/gov/cloud/journal/core/service/impl/JournalServiceImpl.class" | tee $HOME/opt/arthas/hotSwapResult.out
}

redefineResult() {
  cat $HOME/opt/arthas/hotSwapResult.out
  redefineResult=$(cat $HOME/opt/arthas/hotSwapResult.out | grep -E "retransform success|redefine success")
  if [ -z "$redefineResult" ]; then
    banner_simple $(echo $(tput setaf 1)arthas idea plugin hot swap error $(tput sgr0))
  else
    banner_simple "arthas idea plugin hot swap class success"
  fi
}

#delete file
doClenFile() {
  if [ ! -z "delete" ]; then
    rm -rf $HOME/opt/arthas/hotSwap
    echo "arthas idea plugin delete class file $HOME/opt/arthas/hotSwap ok"
  fi
}

# the main function
main() {

  banner_simple "arthas idea plugin hot swap begin;start script path: $(pwd)/arthas-idea-plugin-hot-swap.sh"

  check_permission

  installArthas
  if [ $? -ne 0 ]; then
    exit_on_err 1 "arthas install as.sh script error"
  fi

  decodebase64CLassFile
  if [ $? -ne 0 ]; then
    exit_on_err 1 "arthas idea plugin decodebase64CLass error"
  fi

  if [ -z ${SELECT_VALUE} ]; then
    reset_for_env
    select_pid
    SELECT_VALUE=${TARGET_PID}
  fi

  if [ -z ${SELECT_VALUE} ]; then
    exit_on_err 1 "select target process by classname or JARfilename Target pid is empty"
  fi

  doStarteRedefine

  redefineResult

  doClenFile
}

main "${@}"
" |base64 --decode >arthas-idea-plugin-hot-swap.sh;chmod a+x arthas-idea-plugin-hot-swap.sh;./arthas-idea-plugin-hot-swap.sh;
